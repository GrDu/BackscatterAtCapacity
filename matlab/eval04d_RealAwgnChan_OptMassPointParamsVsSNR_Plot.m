% Plots the parameters of the (finite number of) mass points that
% describe the capacity-achieving transmit distribution over a
% peak-power-constrained real-valued AWGN channel. This is done for many
% different signal-to-noise ratio (SNR) values with a thorough sweep.
%
% The underlying theory is given in the paper:
% Joel G. Smith 1971, "The Information Capacity of Amplitude- and
% Variance-Constrained Scalar Gaussian Channels".
%
% This script relies on the precomputed data in 
% channelCapacity_RealAwgnChan_PeakPowerConstr_0to40dB.mat
% which is generated by
% eval04c_RealAwgnChan_OptMassPointParamsVsSNR_Compute.m
% 
%--------------------------------------------------------------------------
%   This code repository accompanies the following academic publication:
%   Gregor Dumphart, Johannes Sager, Armin Wittneben,
%   "Load Modulation for Backscatter Communication: Channel Capacity and
%   Capacity-Approaching Finite Constellations."
%   arXiv preprint arXiv:2207.08100, July 2022.  
%   Available online at (open access): https://arxiv.org/abs/2207.08100
%
%   Coded by: Gregor Dumphart (gregord.research@gmail.com), July 2022,
%   ETH Zurich (D-ITET, Wireless Communications Group), Switzerland.
%   BSD 3-Clause License applies. Copyright (c) 2022, Gregor Dumphart.
%--------------------------------------------------------------------------   
clear all
addpath 'functions'
load channelCapacity_RealAwgnChan_PeakPowerConstr_0to40dB

% SNR definition is from the Dumphart paper!

% % For comparison: asymptotes from paper Smith 1971, which assumes
% % noise variance 1
A = sqrt(2 * SNR_DefPaper2022);
%asymptote_nat = .5*log(SNR_DefPaper2022) + log(2) - .5*log(pi*exp(1));
asymptote_nat = log(2*A) - log(sqrt(2*pi*exp(1)));
%asymptote_bit = .5*log2(SNR_DefPaper2022) + 1 - .5*log2(pi*exp(1));
asymptote_bit = .5*log2(4*SNR_DefPaper2022 / (pi*exp(1)));

SNR_real    = 1 ./ varianceRealNoise;
SNR_real_dB = 10*log10(SNR_real);

figure(40401), clf

subplot(3,1,1)

semilogx(A, .5*log(1 + SNR_real), 'k:', 'LineWidth', 1.5, 'DisplayName', 'upper bound 1/2 log(1 + A^2)'), hold on
semilogx(A, R_max_real / log2(exp(1)), 'g-', 'LineWidth', 1, 'DisplayName', 'capacity, real AWGN chan., peak-power constr.'), hold on
semilogy(A, R_UD_real  / log2(exp(1)), 'g-.', 'LineWidth', 1, 'DisplayName', 'ach. rate, unif. distr. unit interval'), hold on
semilogy(A, R_LB_real  / log2(exp(1)), 'g:', 'LineWidth', 1, 'DisplayName', 'lower bound 1/2 log_2(1 + 4\rho/(e\pi))'), hold on
semilogx(A, asymptote_nat, 'm--', 'LineWidth', 1, 'DisplayName', 'asymptote log(2A) - log(sqrt(2\pie)), Smith 1971')
grid on
xlabel('amplitude A (def.: 1971 Smith paper)')
ylabel('info. rate [npcu]')
legend('show', 'Location', 'SouthEast')
ylim([0 3.5])

subplot(3,1,2)

semilogy(SNR_real_dB, .5*log2(1 + SNR_real), 'k:', 'LineWidth', 1.5, 'DisplayName', 'upper bound 1/2 log_2(1 + P_{max} / \sigma_{real}^2)'), hold on
semilogy(SNR_real_dB, R_max_real, 'g-', 'LineWidth', 1, 'DisplayName', 'capacity, real AWGN chan., peak-power constr.'), hold on
semilogy(SNR_real_dB, R_UD_real, 'g-.', 'LineWidth', 1, 'DisplayName', 'ach. rate, unif. distr. unit interval'), hold on
semilogy(SNR_real_dB, R_LB_real, 'g:', 'LineWidth', 1, 'DisplayName', 'lower bound 1/2 log_2(1 + 4\rho/(\pie))'), hold on
semilogy(SNR_real_dB, asymptote_bit, 'm--', 'LineWidth', 1, 'DisplayName', 'asymptote, Smith 1971')
grid on
xlabel('P_{max} / \sigma_{real}^2 [dB]')
ylabel('info. rate [bpcu]')
legend('show', 'Location', 'SouthEast')
ylim([1E-1, 1E1])
xlim([min(SNR_DefPaper2022_dB) max(SNR_DefPaper2022_dB)])
xticks(-100 : 10 : 100)

subplot(3,1,3)

semilogy(SNR_DefPaper2022_dB, .5*log2(1 + SNR_real), 'k:', 'LineWidth', 1.5, 'DisplayName', 'upper bound 1/2 log_2(1 + 2\rho)'), hold on
semilogy(SNR_DefPaper2022_dB, R_max_real, 'g-', 'LineWidth', 1, 'DisplayName', 'capacity, real AWGN chan., peak-power constr.'), hold on
semilogy(SNR_DefPaper2022_dB, R_UD_real, 'g-.', 'LineWidth', 1, 'DisplayName', 'ach. rate, unif. distr. unit interval'), hold on
semilogy(SNR_DefPaper2022_dB, R_LB_real, 'g:', 'LineWidth', 1, 'DisplayName', 'lower bound 1/2 log_2(1 + 4\rho/(\pie))'), hold on
semilogy(SNR_DefPaper2022_dB, asymptote_bit, 'm--', 'LineWidth', 1, 'DisplayName', 'asymptote 1/2 log_2(4\rho/(\pie)), Smith 1971')
grid on
xlabel('SNR \rho (def.: Dumphart 2022 BC paper) [dB]')
ylabel('info. rate [bpcu]')
legend('show', 'Location', 'SouthEast')
ylim([1E-1, 1E1])
xlim([min(SNR_DefPaper2022_dB) max(SNR_DefPaper2022_dB)])
xticks(-100 : 10 : 100)

figure(40402), clf

subplot(3,1,1)

for m = 1 : max(MOnesided_evolution)
    plot(SNR_real_dB, smOnesided_evolution(m,:), 'LineWidth', 2, 'HandleVisibility', 'off'), hold on
end
grid on
xlabel('P_{max} / \sigma_{real}^2 [dB]')
ylabel('symbol value s_m')
xticks(-100 : 10 : 100)
xlim([0, max(SNR_real_dB)])
yticks(0 : .1 : 1)
set(gca, 'YTickLabel', {'0','.1','.2','.3','.4','.5','.6','.7','.8','.9','1'})

subplot(3,1,2)

for m = 1 : max(MOnesided_evolution)
    plot(SNR_real_dB, pmOnesided_evolution(m,:), 'LineWidth', 1, 'HandleVisibility', 'off'), hold on
end
grid on
xlabel('P_{max} / \sigma_{real}^2 [dB]')
ylabel('probability p_m')
ylim([0 1])
xticks(-100 : 10 : 100)
xlim([0, max(SNR_real_dB)])
yticks(0 : .1 : 1)
set(gca, 'YTickLabel', {'0','.1','.2','.3','.4','.5','.6','.7','.8','.9','1'})

subplot(3,1,3)

for m = 1 : max(MOnesided_evolution)
    plot(SNR_real_dB, MOnesided_evolution .* pmOnesided_evolution(m,:), 'LineWidth', 1, 'HandleVisibility', 'off'), hold on
end
grid on
xlabel('P_{max} / \sigma_{real}^2 [dB]')
ylabel('p_m \cdot M')
xticks(-100 : 10 : 100)
xlim([0, max(SNR_real_dB)])
